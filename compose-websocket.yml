#
#  Backend
#

# Backend:: Cache for Maven (.m2 repository)
vc_mavencache:
  image: busybox
  labels:
      com.mgreau.docker4dev.backend.cache.maven: "Cache Maven"
  volumes:
   - ~/.m2:/cache/.m2

# Backend:: Project CodeBase
sc_mavenproject:
  image: busybox
  labels:
      com.mgreau.docker4dev.backend.sources.javaee7: "Java sources"
  volumes:
   - ./app/:/myproject

# Backend:: Build project
bc_mavenbuild:
  image: vyolin/alpine-maven
  labels:
    com.mgreau.docker4dev.backend.build.javaee7: "Build app"
  command: mvn clean package -pl tennistour-realtime-server -DfinalName=ws
  volumes_from:
   - vc_mavencache
   - sc_mavenproject
  working_dir: /myproject
  environment:
    MAVEN_OPTS: -Xshare:auto -Xms128M -Xmx1G -XX:MaxPermSize=256M

# Backend:: Run Backend
rc_wildfly:
  build: docker/dev/appservers/.
  labels:
    com.mgreau.tennistour.websocket: "Deploy App"
  ports:
    - "8080:8080"
  volumes:
    - ./app/tennistour-realtime-server/target/ws.war:/opt/jboss/wildfly/standalone/deployments/ROOT.war/

#
# Frontend
#
# Frontend:: Cache for Node (.npm repository)
vc_nodecache:
  image: busybox
  labels:
      com.mgreau.docker4dev.frontend.cache.node: "Cache Node dependencies"
  volumes:
   - /cache/.npm

vc_bowercache:
  image: busybox
  labels:
      com.mgreau.docker4dev.frontend.cache.bower: "Cache Bower dependencies"
  volumes:
   - /var/cache/.bower_components

#To Build the frontend based on Angular and Material Design
bc_nodebuild:
  build: docker/dev/builds/frontend/
  command: npm config set cache /cache/.npm && npm install
  volumes:
   - ./frontend:/data
  volumes_from:
    - vc_nodecache
    - vc_bowercache

# Frontend:: Project CodeBase
sc_angularproject:
  image: busybox
  labels:
      com.mgreau.docker4dev.websocket: "Web sources"
  volumes:
   - .:/myproject
